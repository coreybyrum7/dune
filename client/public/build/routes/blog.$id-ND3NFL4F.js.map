{
  "version": 3,
  "sources": ["../../../app/routes/blog.$id.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/blog.$id.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/blog.$id.tsx\");\n  import.meta.hot.lastModified = \"1699311674795.7493\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { getBlogPost } from \"~/models/blog.server\";\n// loader for route\nexport const loader = async ({\n  params\n}) => {\n  return json({\n    post: await getBlogPost(params.id)\n  });\n};\nconst BlogPost = () => {\n  _s();\n  const {\n    post: {\n      attributes\n    }\n  } = useLoaderData();\n  console.log(attributes);\n  return <section className=\"site-section\">\n            <div className=\"wrapper flex items-center py-16 min-h-[calc(100vh-4rem)]\">\n                <div className=\"profile-cont w-full max-w-5xl m-auto\">\n                    {attributes ? <>\n                            <h2>{attributes.title}</h2>\n                        </> : <p className=\"text-center\">Oops, that post doesn't exist... yet</p>}\n                </div>\n            </div>\n        </section>;\n};\n_s(BlogPost, \"UGd6Srho9ZIz3WBO/oX8v/JIOKQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = BlogPost;\nexport default BlogPost;\nvar _c;\n$RefreshReg$(_c, \"BlogPost\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAAqB;AAErB,kBAA4B;AAoBM;AA1ClC,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,8BAAgC,EAAE;AAAA,EAC3E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAyB;AACzB,cAAY,IAAI,eAAe;AACjC;AAcA,IAAM,WAAW,MAAM;AACrB,KAAG;AACH,QAAM;AAAA,IACJ,MAAM;AAAA,MACJ;AAAA,IACF;AAAA,EACF,IAAI,cAAc;AAClB,UAAQ,IAAI,UAAU;AACtB,SAAO,mDAAC,aAAQ,WAAU,gBAChB,6DAAC,SAAI,WAAU,4DACX,6DAAC,SAAI,WAAU,wCACV,uBAAa,sFACN,6DAAC,QAAI,qBAAW,SAAhB;AAAA;AAAA;AAAA;AAAA,SAAsB,KADhB;AAAA;AAAA;AAAA;AAAA,SAEV,IAAM,mDAAC,OAAE,WAAU,eAAc,oDAA3B;AAAA;AAAA;AAAA;AAAA,SAA+D,KAH7E;AAAA;AAAA;AAAA;AAAA,SAIA,KALJ;AAAA;AAAA;AAAA;AAAA,SAMA,KAPH;AAAA;AAAA;AAAA;AAAA,SAQD;AACR;AACA,GAAG,UAAU,gCAAgC,OAAO,WAAY;AAC9D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAO,kBAAQ;AACf,IAAI;AACJ,aAAa,IAAI,UAAU;AAE3B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
