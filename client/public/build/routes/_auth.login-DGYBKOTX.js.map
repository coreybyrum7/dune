{
  "version": 3,
  "sources": ["../../../app/routes/_auth.login.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_auth.login.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_auth.login.tsx\");\n  import.meta.hot.lastModified = \"1699290545444.6016\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useActionData } from \"@remix-run/react\";\nimport ProfileForm from \"~/components/Profile/Form\";\nimport { signIn } from \"~/models/profiles.server\";\nimport { createUserSession } from \"~/utils/session.server\";\nexport const action = async ({\n  request\n}) => {\n  try {\n    // get request form data\n    const formData = await request.formData();\n\n    // get form values\n    const identifier = formData.get(\"email\");\n    const password = formData.get(\"password\");\n    console.log({\n      identifier,\n      password\n    });\n\n    // error object\n    // each error property is assigned null if it has a value\n    const errors = {\n      identifier: identifier ? null : \"Email is required\",\n      password: password ? null : \"Password is required\"\n    };\n\n    // return true if any property in the error object has a value\n    const hasErrors = Object.values(errors).some(errorMessage => errorMessage);\n\n    //\n    console.log({\n      hasErrors\n    });\n\n    // throw the errors object if any error\n    if (hasErrors) throw errors;\n    console.log({\n      identifier,\n      password\n    });\n\n    // sign in user with identifier and password\n    let {\n      jwt,\n      user,\n      error\n    } = await signIn({\n      identifier,\n      password\n    });\n    console.log({\n      jwt,\n      user,\n      error\n    });\n\n    // throw strapi error message if strapi returns an error\n    if (error) throw {\n      [error.name]: error.message\n    };\n\n    // create user session\n    return createUserSession({\n      jwt,\n      user\n    }, \"/\");\n  } catch (error) {\n    // return error response\n    return json(error);\n  }\n};\nconst Login = () => {\n  _s();\n  const errors = useActionData();\n  console.log({\n    errors\n  });\n  return <section className=\"site-section profiles-section\">\n      <div className=\"wrapper\">\n        <header className=\"section-header\">\n          <h2 className=\"text-4xl\">Sign in </h2>\n          <p>You have to log in to edit your profile</p>\n        </header>\n\n        {/* set form action to `login` and pass errors if any */}\n        <ProfileForm action=\"login\" errors={errors} />\n      </div>\n    </section>;\n};\n_s(Login, \"MXG3vJWOluRyotNja3c0q7lD6Co=\", false, function () {\n  return [useActionData];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAAqB;AAGrB,sBAAuB;AACvB,qBAAkC;AA6ExB;AArGV,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,iCAAmC,EAAE;AAAA,EAC9E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA4B;AAC5B,cAAY,IAAI,eAAe;AACjC;AA2EA,IAAM,QAAQ,MAAM;AAClB,KAAG;AACH,QAAM,SAAS,cAAc;AAC7B,UAAQ,IAAI;AAAA,IACV;AAAA,EACF,CAAC;AACD,SAAO,mDAAC,aAAQ,WAAU,iCACtB,6DAAC,SAAI,WAAU,WACb;AAAA,uDAAC,YAAO,WAAU,kBAChB;AAAA,yDAAC,QAAG,WAAU,YAAW,wBAAzB;AAAA;AAAA;AAAA;AAAA,aAAiC;AAAA,MACjC,mDAAC,OAAE,uDAAH;AAAA;AAAA;AAAA;AAAA,aAA0C;AAAA,SAF5C;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IAGA,mDAAC,gBAAY,QAAO,SAAQ,UAA5B;AAAA;AAAA;AAAA;AAAA,WAA4C;AAAA,OAP9C;AAAA;AAAA;AAAA;AAAA,SAQA,KATG;AAAA;AAAA;AAAA;AAAA,SAUL;AACJ;AACA,GAAG,OAAO,gCAAgC,OAAO,WAAY;AAC3D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAO,qBAAQ;AACf,IAAI;AACJ,aAAa,IAAI,OAAO;AAExB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
