{
  "version": 3,
  "sources": ["../../../app/routes/_auth.forgotPassword.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_auth.forgotPassword.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_auth.forgotPassword.tsx\");\n  import.meta.hot.lastModified = \"1699295184619.6228\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { Form, useActionData, useNavigation } from \"@remix-run/react\";\nimport { sendResetMail } from \"~/models/profiles.server\";\n\n// action function to get form values and run reset mail function\nexport const action = async ({\n  request\n}) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const response = await sendResetMail(email);\n  return json(response);\n};\nconst ForgotPass = () => {\n  _s();\n  const navigation = useNavigation();\n  const data = useActionData();\n  return <section className=\"site-section profiles-section\">\n      <div className=\"wrapper\">\n        <header className=\"section-header\">\n          <h2 className=\"text-4xl\">Forgot password</h2>\n          <p>Click the button below to send the reset link to your registerd email</p>\n        </header>\n\n        <Form method=\"post\" className=\"form\">\n          <div className=\"wrapper\">\n            <p>{data?.ok ? \"Link sent! Check your mail. Can't find it in the inbox? Check Spam\" : \"\"}</p>\n            <div className=\"form-control\">\n              <label htmlFor=\"email\">Email</label>\n              <input id=\"email\" name=\"email\" type=\"email\" className=\"form-input\" required />\n            </div>\n            <div className=\"action-cont mt-4\">\n              <button className=\"cta\"> {navigation.state == \"submitting\" ? \"Sending\" : \"Send link\"} </button>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </section>;\n};\n_s(ForgotPass, \"fKFN9xseM5n8F1WPfjaTTyC08vc=\", false, function () {\n  return [useNavigation, useActionData];\n});\n_c = ForgotPass;\nexport default ForgotPass;\nvar _c;\n$RefreshReg$(_c, \"ForgotPass\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAAqB;AAErB,sBAA8B;AAkBpB;AAxCV,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,0CAA4C,EAAE;AAAA,EACvF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAqC;AACrC,cAAY,IAAI,eAAe;AACjC;AAgBA,IAAM,aAAa,MAAM;AACvB,KAAG;AACH,QAAM,aAAa,cAAc;AACjC,QAAM,OAAO,cAAc;AAC3B,SAAO,mDAAC,aAAQ,WAAU,iCACtB,6DAAC,SAAI,WAAU,WACb;AAAA,uDAAC,YAAO,WAAU,kBAChB;AAAA,yDAAC,QAAG,WAAU,YAAW,+BAAzB;AAAA;AAAA;AAAA;AAAA,aAAwC;AAAA,MACxC,mDAAC,OAAE,qFAAH;AAAA;AAAA;AAAA;AAAA,aAAwE;AAAA,SAF1E;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IAEA,mDAAC,QAAK,QAAO,QAAO,WAAU,QAC5B,6DAAC,SAAI,WAAU,WACb;AAAA,yDAAC,OAAG,gBAAM,KAAK,uEAAuE,MAAtF;AAAA;AAAA;AAAA;AAAA,aAAyF;AAAA,MACzF,mDAAC,SAAI,WAAU,gBACb;AAAA,2DAAC,WAAM,SAAQ,SAAQ,qBAAvB;AAAA;AAAA;AAAA;AAAA,eAA4B;AAAA,QAC5B,mDAAC,WAAM,IAAG,SAAQ,MAAK,SAAQ,MAAK,SAAQ,WAAU,cAAa,UAAQ,QAA3E;AAAA;AAAA;AAAA;AAAA,eAA4E;AAAA,WAF9E;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,mDAAC,SAAI,WAAU,oBACb,6DAAC,YAAO,WAAU,OAAM;AAAA;AAAA,QAAE,WAAW,SAAS,eAAe,YAAY;AAAA,QAAY;AAAA,WAArF;AAAA;AAAA;AAAA;AAAA,aAAsF,KADxF;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SARF;AAAA;AAAA;AAAA;AAAA,WASA,KAVF;AAAA;AAAA;AAAA;AAAA,WAWA;AAAA,OAjBF;AAAA;AAAA;AAAA;AAAA,SAkBA,KAnBG;AAAA;AAAA;AAAA;AAAA,SAoBL;AACJ;AACA,GAAG,YAAY,gCAAgC,OAAO,WAAY;AAChE,SAAO,CAAC,eAAe,aAAa;AACtC,CAAC;AACD,KAAK;AACL,IAAO,8BAAQ;AACf,IAAI;AACJ,aAAa,IAAI,YAAY;AAE7B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
