{
  "version": 3,
  "sources": ["../../../app/routes/blog.all.tsx", "../../../app/components/Blog/Card/index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/blog.all.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/blog.all.tsx\");\n  import.meta.hot.lastModified = \"1699311175223.151\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport BlogCard from \"~/components/Blog/Card\";\nimport { getBlog } from \"~/models/blog.server\";\n// loader for route\nexport const loader = async () => {\n  return json({\n    blog: await getBlog()\n  });\n};\nexport default function Index() {\n  _s();\n  const {\n    blog\n  } = useLoaderData();\n  return <section className=\"site-section profiles-section\">\n      <div>\n        <header className=\"section-header\">\n          <h2 className=\"text-4xl\">Blog!</h2>\n          <p>Welcome to the new blog</p>\n        </header>\n        {blog.length > 0 ? <ul className=\"profiles-list\">\n            {blog.map(post => <li key={post.id} className=\"profile-item\">\n                <BlogCard post={post} />\n              </li>)}\n          </ul> : <p>No blog posts yet \uD83D\uDE42</p>}{\" \"}\n      </div>\n    </section>;\n}\n_s(Index, \"UGd6Srho9ZIz3WBO/oX8v/JIOKQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/Blog/Card/index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/Blog/Card/index.tsx\");\n  import.meta.hot.lastModified = \"1699310968150.5073\";\n}\n// REMIX HMR END\n\nimport { Link } from '@remix-run/react';\nimport { strapiUrl } from '~/utils/shared';\nexport default function BlogCard({\n  post\n}) {\n  let data = post.attributes;\n  return <div className=\"card\">\n      <div className=\"card-content\">\n        <div className=\"card-img\">\n          <img src={`${strapiUrl}${data.hero.data.attributes.url}`} alt={data.hero.data.attributes.alternativeText} />\n        </div>\n        <div className=\"card-details\">\n\n          <Link to={`/blog/${post.id}`} className=\"card-title\">\n            {data.title}\n          </Link>\n\n          <p className=\"card-excerpt\">{data.excerpt}</p>\n        </div>\n      </div>\n    </div>;\n}\n_c = BlogCard;\nvar _c;\n$RefreshReg$(_c, \"BlogCard\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAAqB;;;ACQX;AA5BV,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,yCAA2C,EAAE;AAAA,EACtF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAoC;AACpC,cAAY,IAAI,eAAe;AACjC;AAKe,SAAR,SAA0B;AAAA,EAC/B;AACF,GAAG;AACD,MAAI,OAAO,KAAK;AAChB,SAAO,mDAAC,SAAI,WAAU,QAClB,6DAAC,SAAI,WAAU,gBACb;AAAA,uDAAC,SAAI,WAAU,YACb,6DAAC,SAAI,KAAK,GAAG,YAAY,KAAK,KAAK,KAAK,WAAW,OAAO,KAAK,KAAK,KAAK,KAAK,WAAW,mBAAzF;AAAA;AAAA;AAAA;AAAA,WAA0G,KAD5G;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,SAAI,WAAU,gBAEb;AAAA,yDAAC,QAAK,IAAI,SAAS,KAAK,MAAM,WAAU,cACrC,eAAK,SADR;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,mDAAC,OAAE,WAAU,gBAAgB,eAAK,WAAlC;AAAA;AAAA;AAAA;AAAA,aAA0C;AAAA,SAN5C;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,OAXF;AAAA;AAAA;AAAA;AAAA,SAYA,KAbG;AAAA;AAAA;AAAA;AAAA,SAcL;AACJ;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,UAAU;AAE3B,OAAO,eAAe;AACtB,OAAO,eAAe;;;ADvBtB,kBAAwB;AAed,IAAAA,0BAAA;AAtCV,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,8BAAgC,EAAE;AAAA,EAC3E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAyB;AACzB,cAAY,IAAI,eAAe;AACjC;AAae,SAAR,QAAyB;AAC9B,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,oDAAC,aAAQ,WAAU,iCACtB,8DAAC,SACC;AAAA,wDAAC,YAAO,WAAU,kBAChB;AAAA,0DAAC,QAAG,WAAU,YAAW,qBAAzB;AAAA;AAAA;AAAA;AAAA,aAA8B;AAAA,MAC9B,oDAAC,OAAE,uCAAH;AAAA;AAAA;AAAA;AAAA,aAA0B;AAAA,SAF5B;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IACC,KAAK,SAAS,IAAI,oDAAC,QAAG,WAAU,iBAC5B,eAAK,IAAI,UAAQ,oDAAC,QAAiB,WAAU,gBAC1C,8DAAC,YAAS,QAAV;AAAA;AAAA;AAAA;AAAA,WAAsB,KADC,KAAK,IAAd;AAAA;AAAA;AAAA;AAAA,WAEhB,CAAK,KAHQ;AAAA;AAAA;AAAA;AAAA,WAIjB,IAAQ,oDAAC,OAAE,2CAAH;AAAA;AAAA;AAAA;AAAA,WAAuB;AAAA,IAAM;AAAA,OATzC;AAAA;AAAA;AAAA;AAAA,SAUA,KAXG;AAAA;AAAA;AAAA;AAAA,SAYL;AACJ;AACA,GAAG,OAAO,gCAAgC,OAAO,WAAY;AAC3D,SAAO,CAAC,aAAa;AACvB,CAAC;AACDC,MAAK;AACL,IAAIA;AACJ,aAAaA,KAAI,OAAO;AAExB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_jsx_dev_runtime", "_c"]
}
